[
  {
    "line": 2,
    "elements": [
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2564765505,
              "status": "passed"
            },
            "line": 4,
            "name": "I run this",
            "match": {
              "location": "TestStepDefs.i_run_this()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4798280272,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setUp()"
            }
          }
        ],
        "line": 11,
        "name": "test for step defs 2",
        "description": "",
        "id": "test-for-step-defs-2;test-for-step-defs-2;;2",
        "after": [
          {
            "result": {
              "duration": 989522640,
              "status": "passed"
            },
            "match": {
              "location": "Hook.threadDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 283638422,
              "status": "passed"
            },
            "line": 7,
            "name": "serching for \"selemium\"",
            "match": {
              "arguments": [
                {
                  "val": "selemium",
                  "offset": 14
                }
              ],
              "location": "TestStepDefs2.serching_for(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 767471480,
              "status": "passed"
            },
            "line": 8,
            "name": "search result is more then 100000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 27
                }
              ],
              "location": "TestStepDefs2.search_result_is_more_then(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@stepdef2"
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 2192893889,
              "status": "passed"
            },
            "line": 4,
            "name": "I run this",
            "match": {
              "location": "TestStepDefs.i_run_this()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3449439439,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setUp()"
            }
          }
        ],
        "line": 12,
        "name": "test for step defs 2",
        "description": "",
        "id": "test-for-step-defs-2;test-for-step-defs-2;;3",
        "after": [
          {
            "result": {
              "duration": 1187682734,
              "status": "passed"
            },
            "match": {
              "location": "Hook.threadDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 337608159,
              "status": "passed"
            },
            "line": 7,
            "name": "serching for \"fawefagvaewvewgergafewgawge\"",
            "match": {
              "arguments": [
                {
                  "val": "fawefagvaewvewgergafewgawge",
                  "offset": 14
                }
              ],
              "location": "TestStepDefs2.serching_for(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21741537939,
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.id: resultStats\u0027 (tried for 15 second(s) with 500 MILLISECONDS interval)\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027costco\u0027, ip: \u0027192.168.223.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_111\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, mobileEmulationEnabled\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir\u003dC:\\Users\\user\\AppData\\Local\\Temp\\scoped_dir9740_27753}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, hasTouchScreen\u003dfalse, version\u003d59.0.3071.104, platform\u003dXP, browserConnectionEnabled\u003dfalse, nativeEvents\u003dtrue, acceptSslCerts\u003dtrue, locationContextEnabled\u003dtrue, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue, unexpectedAlertBehaviour\u003d}]\nSession ID: 3829a98fba13625a94ecfc99e45900f8\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:265)\r\n\tat com.stay.stepdefs.TestStepDefs2.search_result_is_more_then(TestStepDefs2.java:33)\r\n\tat âœ½.And search result is more then 100000(testForStepDefs2.feature:8)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"resultStats\"}\n  (Session info: chrome\u003d59.0.3071.104)\n  (Driver info: chromedriver\u003d2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform\u003dWindows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 4.00 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027costco\u0027, ip: \u0027192.168.223.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_111\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, mobileEmulationEnabled\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir\u003dC:\\Users\\user\\AppData\\Local\\Temp\\scoped_dir9740_27753}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, hasTouchScreen\u003dfalse, version\u003d59.0.3071.104, platform\u003dXP, browserConnectionEnabled\u003dfalse, nativeEvents\u003dtrue, acceptSslCerts\u003dtrue, locationContextEnabled\u003dtrue, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue, unexpectedAlertBehaviour\u003d}]\nSession ID: 3829a98fba13625a94ecfc99e45900f8\n*** Element info: {Using\u003did, value\u003dresultStats}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy16.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:302)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:41)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:288)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:285)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)\r\n\tat com.stay.stepdefs.TestStepDefs2.search_result_is_more_then(TestStepDefs2.java:33)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)\r\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\r\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:300)\r\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\r\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\r\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\r\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)\r\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:100)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 8,
            "name": "search result is more then 100000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 27
                }
              ],
              "location": "TestStepDefs2.search_result_is_more_then(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@stepdef2"
          }
        ]
      },
      {
        "line": 3,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3444664025,
              "status": "passed"
            },
            "line": 4,
            "name": "I run this",
            "match": {
              "location": "TestStepDefs.i_run_this()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4380230924,
              "status": "passed"
            },
            "match": {
              "location": "Hook.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "test for step defs 2",
        "description": "",
        "id": "test-for-step-defs-2;test-for-step-defs-2;;4",
        "after": [
          {
            "result": {
              "duration": 845760094,
              "status": "passed"
            },
            "match": {
              "location": "Hook.threadDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 205914311,
              "status": "passed"
            },
            "line": 7,
            "name": "serching for \"Cucumber\"",
            "match": {
              "arguments": [
                {
                  "val": "Cucumber",
                  "offset": 14
                }
              ],
              "location": "TestStepDefs2.serching_for(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1090938609,
              "status": "passed"
            },
            "line": 8,
            "name": "search result is more then 100000",
            "match": {
              "arguments": [
                {
                  "val": "100000",
                  "offset": 27
                }
              ],
              "location": "TestStepDefs2.search_result_is_more_then(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@stepdef2"
          }
        ]
      }
    ],
    "name": "test for Step defs 2",
    "description": "",
    "id": "test-for-step-defs-2",
    "keyword": "Feature",
    "uri": "testForStepDefs2.feature",
    "tags": [
      {
        "line": 1,
        "name": "@stepdef2"
      }
    ]
  }
]